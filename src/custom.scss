@import '~@blueprintjs/core/lib/scss/variables.scss';

$myblue1: #1954ac;
$myblue2: #1c61c9;
$myblue3: #1e71eb;
$myblue4: #1e88eb;
$myblue5: #1e99eb;

$custom: (
	"primary": ($forest1, $forest2,  $forest3, $forest4, $forest5),
	"success": ($myblue1,$myblue2, $myblue3, $myblue4, $myblue5),
	"warning": ($gold1, $gold2,  $gold3, $gold4, $gold5),
	"danger": ($vermilion1, $vermilion2,  $vermilion3, $vermilion4, $vermilion5),
) !default;

// ========================================= START restyle core blueprint ==========================================

@mixin my-button-intent($default-color, $hover-color, $active-color) {
    box-shadow: none;
    &:not(.#{$ns}-minimal) {
        background-color: $default-color;
    }

    &:hover {
        box-shadow: none;
        background-color: $hover-color;
    }

    &:active,
    &.#{$ns}-active {
        background-color: $active-color;
        background-image: none;
    }

    &:disabled,
    &.#{$ns}-disabled {
        @include my-button-intent-disabled($default-color);
    }
}

@mixin my-button-intent-disabled($default-color) {
    border-color: transparent;
    box-shadow: none;
    background-color: rgba($default-color, 0.5);
    background-image: none;
}

@mixin my-button-minimal-intent($intent-color, $text-color, $dark-text-color) {
    color: $text-color;

    &:hover,
    &:active,
    &.#{$ns}-active {
        color: $text-color;
    }

    &:hover {
        background: rgba($intent-color, 0.15);
        color: $text-color;
    }

    &:active,
    &.#{$ns}-active {
        background: rgba($intent-color, 0.3);
        color: $text-color;
    }

    &:disabled,
    &.#{$ns}-disabled {
        color: rgba($text-color, 0.5);

        &.#{$ns}-active {
            background: rgba($intent-color, 0.3);
        }
    }

    .#{$ns}-button-spinner .#{$ns}-spinner-head {
        stroke: $text-color;
    }
}

.#{$ns}-button.#{$ns}-minimal {
    @each $intent, $colors in $custom {
		&.#{$ns}-intent-#{$intent} {            
            @include my-button-minimal-intent(
                nth($colors, 3),
                nth($colors, 2),
                nth($colors, 1),
            )            
		}
	}
}

.#{$ns}-button {
	@each $intent, $colors in $custom {
		&.#{$ns}-intent-#{$intent} {
			@include my-button-intent(
				nth($colors, 3),
				nth($colors, 2),
				nth($colors, 1),
            )
        }
    }
}

.#{$ns}-navbar {
    color: $white;
	position: sticky;
	top: 0;
	border-bottom: 1px solid nth(map-get($custom, "primary"), 3);
    box-shadow: 0 1px 15px rgba(0, 0, 0, 0.2);
    
    & .#{$ns}-navbar-divider {
        border-left: 1px solid $gray5;
    }

    & .#{$ns}-button {
        
        & .#{$ns}-icon {
            color: $white;
        }

        & .#{$ns}-minimal {
            color: $white;
        }
    }
}

.#{$ns}-icon {
    &.#{$ns}-intent-primary {
        color: nth(map-get($custom, "primary"), 3);
    }
}

.#{$ns}-menu-item:hover {
    & .#{$ns}-menu-item-label {
        color: $white;
    }
}

.#{$ns}-menu-item:hover {
	background-color: nth(map-get($custom, "primary"), 4);
    color: $white;
    
    & > .#{$ns}-icon {
	    color: $white;
    }
}

.#{$ns}-tooltip {
	user-select: none;
}

.#{$ns}-control.#{$ns}-switch {

    &:hover {
        & input:checked ~ .#{$ns}-control-indicator {
            background: nth(map-get($custom, "primary"), 3);
        }
    }

    & input:checked ~ .#{$ns}-control-indicator {
        background: nth(map-get($custom, "primary"), 3);
    }
}

.#{$ns}-button:focus {
	outline: none;
}

.#{$ns}-spinner {

    &.#{$ns}-intent-primary {

        & .#{$ns}-spinner-head {
            stroke: nth(map-get($custom, "primary"), 3);
        }
    }

}

@function my-input-transition-shadow($color: nth(map-get($custom, "primary"), 3), $focus: false) {
    @if $focus {
        @return
        border-shadow(1, $color, 1px),
        border-shadow(0.3, $color, 3px);
    } @else {
        @return
        border-shadow(0, $color, 0),
        border-shadow(0, $color, 0);
    }
}

.myselectitem {
    & .#{$ns}-button {
        background-color: transparent;
        box-shadow: none;    
        border-bottom: 1px solid $gray4;
        border-radius: 0;

        &:hover {
            box-shadow: none;    
            background-color: transparent;
            border-bottom: 1px solid $gray4;            
            border-radius: 0;
            font-weight: bolder;
        }

        &:focus {
            box-shadow: 0 1px 0 0px nth(map-get($custom, "primary"), 3), 0 3px 0px 0px rgba(30, 235, 55, 0.3), inset 0 -1px 1px rgba(16, 22, 26, 0);
            background-color: transparent;
            border-bottom: 1px solid $gray4;            
            border-radius: 0;
            font-weight: bolder;
        }
    }
}

.#{$ns}-input {
    background-color: transparent;
	box-shadow: none;
    border-bottom: 1px solid $gray4;   
    border-radius: 0;
    
    &:focus {
        // box-shadow: my-input-transition-shadow(nth(map-get($custom, "primary"), 3), true), inset 0 1px 1px rgba($black, 0.2);        
        box-shadow: 0 1px 0 0px nth(map-get($custom, "primary"), 3), 0 3px 0px 0px rgba(30, 235, 55, 0.3), inset 0 -1px 1px rgba(16, 22, 26, 0);
        background-color: transparent;
        border-radius: 0 !important;
        font-weight: bolder;
    }

    &:disabled {
        background-color: transparent;
    }
}

.#{$ns}-card {
	box-shadow: 0 1px 15px rgba(0, 0, 0, 0.05);
}

table.#{$ns}-html-table th {
	color: nth(map-get($custom, "primary"), 4);
	font-weight: normal;
	background-color: $white;
	position: sticky;
	top: 0;
}

.#{$ns}-popover {
	box-shadow: 0 1px 15px rgba(0, 0, 0, 0.15);
}

.#{$ns}-submenu.bp3-popover > .#{$ns}-popover-content {
	box-shadow: 0 1px 15px rgba(0, 0, 0, 0.15);
}

.#{$ns}-popover .#{$ns}-popover-arrow::before {
	box-shadow: 0 1px 15px rgba(0, 0, 0, 0.15);
}

.#{$ns}-checkbox {
	user-select: none;
}

.#{$ns}-form-group .#{$ns}-label {
    margin-left: 10px;
}

.print {
    font-size: 12px !important;

    .watermark {
        position: relative;
        top: 150px;
        width: 55%;
        transform: rotate(-20deg);
        text-align: center;   
        
        & > span {
            position: fixed;
            font-size: 60px;
            text-align: center;
            color: rgba(0, 0, 0, 0.08);
        }
    }

    & .#{$ns}-label {
        margin-bottom: 0;
    }

    .print-heading {
        border-collapse: collapse;
        width: 100%;  
        box-shadow: none;  
        
        & td {
            padding-top: 2px !important;
            padding-bottom: 2px !important;
            box-shadow: none !important;
        }
    }
    
    .print-total {
        border-collapse: collapse;
        width: 100%;

        & td {
            padding-top: 2px !important;
            padding-bottom: 2px !important;
            border-top: 1px solid $black !important;
            border-bottom: 1px solid $black !important;
            box-shadow: none !important;
        }
    }	
    
    .print-detail {
        border-collapse: collapse;
        width: 100%;
        
        & td {
            padding-top: 2px !important;
            padding-bottom: 2px !important;
            color: $black;
            border: 1px solid $black !important;
            box-shadow: none !important;            
            
            &.inline {
                white-space: nowrap;
            }
        }
    }

    & .print-off {
        color: $gray3;
    }
}

@media print {
    * {
        font-size: 12px !important;
        box-shadow: none !important;
        background: unset !important;
    }

	body {
		background-color: unset;
	}

    .print-off {
		display: none !important;
		width: 0px !important;
		height: 0px !important;
	}
	
	.wrapSidebar  {
		width: 0px !important;
	}	
	
	.clover-paper-transparent {
		padding: 0 !important;
		margin: 0 !important;
		
		& .clover-container {
			padding: 0 !important;
			margin: 0 !important;
		}
		
		& .form {
			box-shadow: none;
			padding: 0px !important;		
			margin: 0 !important;
		}
        
    }

    .print-heading {
        border-collapse: collapse;
        width: 100%;  
        box-shadow: none;  
        
        & td {
            padding-top: 2px !important;
            padding-bottom: 2px !important;
            box-shadow: none !important;
        }
    }
    
    .print-total {
        border-collapse: collapse;
        width: 100%;

        & td {
            padding-top: 2px !important;
            padding-bottom: 2px !important;
            border-top: 1px solid $black !important;
            border-bottom: 1px solid $black !important;
            box-shadow: none !important;
        }
    }	
    
    .print-detail {
        border-collapse: collapse;
        width: 100%;
        
        & td {
            padding-top: 2px !important;
            padding-bottom: 2px !important;
            color: $black;
            border: 1px solid $black !important;
            box-shadow: none !important;            
            
            &.inline {
                white-space: nowrap;
            }
        }
    }
}

.#{$ns}-control.#{$ns}-checkbox input:checked~.#{$ns}-control-indicator {
    outline: none !important;
    background-color: nth(map-get($custom, "primary"), 3);

    &:before {
        background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E")
    }
}

.myselect > .#{$ns}-popover-target {
	width: 100%;
}

.myselect > .#{$ns}-popover-target > div > .#{$ns}-button {
	justify-content: space-between;
}

.#{$ns}-popover .#{$ns}-popover-content {
	position: relative;
    border-radius: 3px;
}

.#{$ns}-select-popover .#{$ns}-popover-content {
	padding: 5px;
}

.#{$ns}-select-popover .#{$ns}-menu:not(:first-child) {
	padding-top: 5px;
}

.#{$ns}-select-popover .#{$ns}-menu {
	// max-width: 400px;
    max-height: 300px;
    overflow: auto;
    padding: 0;
}

.#{$ns}-datepicker .DayPicker-Day.DayPicker-Day--selected {
    background-color: nth(map-get($custom, "primary"), 3);

    &:hover {
        background-color: nth(map-get($custom, "primary"), 2);
    }
}

.#{$ns}-toast {
    box-shadow: 0 0 0 1px rgba(16, 22, 26, 0), 0 2px 4px rgba(16, 22, 26, 0.2), 0 8px 24px rgba(16, 22, 26, 0.2);

    &.#{$ns}-intent-primary {
        background-color: nth(map-get($custom, "primary"), 3);
    }

    &.#{$ns}-intent-success {
        background-color: nth(map-get($custom, "success"), 3);
    }

    &.#{$ns}-intent-warning {
        background-color: nth(map-get($custom, "warning"), 4);
    }

    &.#{$ns}-intent-danger {
        background-color: nth(map-get($custom, "danger"), 3);
    }

}

::-webkit-scrollbar-thumb {
  background-color: nth(map-get($custom, "primary"), 5);
}

.primary1 {
	color: nth(map-get($custom, "primary"), 1);
}

.primary2 {
	color: nth(map-get($custom, "primary"), 2);
}

.primary3 {
	color: nth(map-get($custom, "primary"), 3);
}

.primary4 {
	color: nth(map-get($custom, "primary"), 4);
}

.primary5 {
	color: nth(map-get($custom, "primary"), 5);
}

.bprimary1 {
	background-color: nth(map-get($custom, "primary"), 1);
}

.bprimary2 {
	background-color: nth(map-get($custom, "primary"), 2);
}

.bprimary3 {
	background-color: nth(map-get($custom, "primary"), 3);
}

.bprimary4 {
	background-color: nth(map-get($custom, "primary"), 4);
}

.bprimary5 {
	background-color: nth(map-get($custom, "primary"), 5);
}